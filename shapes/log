
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5]]
 06/02/2023 00:45:14 
}
{
{'Square': [{'sides': [2, 2, 2, 2], 'area': 4, 'perimeter': 8}], 'Rectangle': [{'sides': [2, 2, 3, 3], 'area': 6, 'perimeter': 10}], 'Triangle': [{'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [5, 6, 6], 'area': 13.635890143294644, 'perimeter': 17}, {'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}]}
 06/02/2023 00:45:14 
}
{
[[2, 3, 8]]
 06/02/2023 00:45:14 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 00:46:04 
}
{
{'Square': [{'sides': [2, 2, 2, 2], 'area': 4, 'perimeter': 8}], 'Rectangle': [{'sides': [2, 2, 3, 3], 'area': 6, 'perimeter': 10}], 'Triangle': [{'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [5, 6, 6], 'area': 13.635890143294644, 'perimeter': 17}, {'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}]}
 06/02/2023 00:46:04 
}
{
[[2, 3, 8], [2, 3, 8]]
 06/02/2023 00:46:04 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 00:54:54 
}
{
There is improper shape and the rais on error is True !!
 06/02/2023 00:54:54 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 00:58:10 
}
{
{'Square': [{'sides': [2, 2, 2, 2], 'area': 4, 'perimeter': 8}], 'Rectangle': [{'sides': [2, 2, 3, 3], 'area': 6, 'perimeter': 10}], 'Triangle': [{'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [5, 6, 6], 'area': 13.635890143294644, 'perimeter': 17}, {'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}]}
 06/02/2023 00:58:10 
}
{
[[2, 3, 8], [2, 3, 8]]
 06/02/2023 00:58:10 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 00:58:43 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 01:00:16 
}
{
{'Square': [{'sides': [2, 2, 2, 2], 'area': 4, 'perimeter': 8}], 'Rectangle': [{'sides': [2, 2, 3, 3], 'area': 6, 'perimeter': 10}], 'Triangle': [{'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [5, 6, 6], 'area': 13.635890143294644, 'perimeter': 17}, {'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}]}
 06/02/2023 01:00:16 
}
{
[[2, 3, 8], [2, 3, 8]]
 06/02/2023 01:00:16 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 01:00:29 
}
{
{'Square': [{'sides': [2, 2, 2, 2], 'area': 4, 'perimeter': 8}], 'Rectangle': [{'sides': [2, 2, 3, 3], 'area': 6, 'perimeter': 10}], 'Triangle': [{'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [5, 6, 6], 'area': 13.635890143294644, 'perimeter': 17}, {'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}]}
 06/02/2023 01:00:29 
}
{
[[2, 3, 8], [2, 3, 8]]
 06/02/2023 01:00:29 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 01:13:09 
}
{
{'Square': [{'sides': [2, 2, 2, 2], 'area': 4, 'perimeter': 8}], 'Rectangle': [{'sides': [2, 2, 3, 3], 'area': 6, 'perimeter': 10}], 'Triangle': [{'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [5, 6, 6], 'area': 13.635890143294644, 'perimeter': 17}]}
 06/02/2023 01:13:09 
}
{
[[2, 3, 8], [2, 3, 8]]
 06/02/2023 01:13:09 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 01:13:39 
}
{
{'Square': [{'sides': [2, 2, 2, 2], 'area': 4, 'perimeter': 8}], 'Rectangle': [{'sides': [2, 2, 3, 3], 'area': 6, 'perimeter': 10}], 'Triangle': [{'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [5, 6, 6], 'area': 13.635890143294644, 'perimeter': 17}, {'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}]}
 06/02/2023 01:13:39 
}
{
[[2, 3, 8], [2, 3, 8]]
 06/02/2023 01:13:39 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 01:14:23 
}
{
None
 06/02/2023 01:14:23 
}
{
{'Square': [{'sides': [2, 2, 2, 2], 'area': 4, 'perimeter': 8}], 'Rectangle': [{'sides': [2, 2, 3, 3], 'area': 6, 'perimeter': 10}], 'Triangle': [{'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [5, 6, 6], 'area': 13.635890143294644, 'perimeter': 17}]}
 06/02/2023 01:14:23 
}
{
[[2, 3, 8], [2, 3, 8]]
 06/02/2023 01:14:23 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 01:20:08 
}
{
None
 06/02/2023 01:20:08 
}
{
{'Square': [{'sides': [2, 2, 2, 2], 'area': 4, 'perimeter': 8}], 'Rectangle': [{'sides': [2, 2, 3, 3], 'area': 6, 'perimeter': 10}], 'Triangle': [{'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [5, 6, 6], 'area': 13.635890143294644, 'perimeter': 17}]}
 06/02/2023 01:20:08 
}
{
[[2, 3, 8], [2, 3, 8]]
 06/02/2023 01:20:08 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 01:21:56 
}
{
None
 06/02/2023 01:21:56 
}
{
{'Square': [{'sides': [2, 2, 2, 2], 'area': 4, 'perimeter': 8}], 'Rectangle': [{'sides': [2, 2, 3, 3], 'area': 6, 'perimeter': 10}], 'Triangle': [{'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [5, 6, 6], 'area': 13.635890143294644, 'perimeter': 17}]}
 06/02/2023 01:21:56 
}
{
[[2, 3, 8], [2, 3, 8]]
 06/02/2023 01:21:56 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 01:23:21 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 01:23:21 
}
{
{'Square': [{'sides': [2, 2, 2, 2], 'area': 4, 'perimeter': 8}], 'Rectangle': [{'sides': [2, 2, 3, 3], 'area': 6, 'perimeter': 10}], 'Triangle': [{'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [5, 6, 6], 'area': 13.635890143294644, 'perimeter': 17}, {'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}]}
 06/02/2023 01:23:21 
}
{
[[2, 3, 8], [2, 3, 8]]
 06/02/2023 01:23:21 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 01:24:20 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 01:24:20 
}
{
{'Square': [{'sides': [2, 2, 2, 2], 'area': 4, 'perimeter': 8}], 'Rectangle': [{'sides': [2, 2, 3, 3], 'area': 6, 'perimeter': 10}], 'Triangle': [{'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [5, 6, 6], 'area': 13.635890143294644, 'perimeter': 17}]}
 06/02/2023 01:24:20 
}
{
[[2, 3, 8], [2, 3, 8]]
 06/02/2023 01:24:20 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 01:37:57 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 01:37:57 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 01:39:17 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 01:39:17 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 01:42:52 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 01:42:52 
}
{
There is improper shape and the rais on error is True !!
 06/02/2023 01:42:52 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 01:43:46 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 01:43:46 
}
{
There is improper shape and the rais on error is True !!
 06/02/2023 01:43:46 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 01:43:52 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 01:43:52 
}
{
There is improper shape and the rais on error is True !!
 06/02/2023 01:43:52 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 01:44:41 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 01:44:41 
}
{
There is improper shape and the rais on error is True !!
 06/02/2023 01:44:41 
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 01:45:43 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 01:45:43 
}
{
There is improper shape and the rais on error is True !!1 is not in list
 06/02/2023 01:45:43 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 01:46:39 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 01:46:39 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 01:48:03 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 01:48:03 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 01:48:11 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 01:48:11 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 01:48:30 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 01:48:30 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 01:49:28 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 01:49:28 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 01:51:22 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 01:51:22 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 01:51:35 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 01:51:35 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 01:54:03 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 01:54:03 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 01:54:39 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 01:54:39 
}
{
{'Square': [], 'Rectangle': [{'sides': [2, 2, 3, 3], 'area': 6, 'perimeter': 10}], 'Triangle': [{'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [5, 6, 6], 'area': 13.635890143294644, 'perimeter': 17}]}
 06/02/2023 01:54:39 
}
{
[[2, 3, 8], [2, 3, 8]]
 06/02/2023 01:54:39 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 01:55:46 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 01:55:46 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 01:55:59 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 01:55:59 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 01:56:17 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 01:56:17 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 01:59:24 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 01:59:24 
}
{
Is triangle test'>' not supported between instances of 'list' and 'int'
 06/02/2023 02:37:17 
}
{
Is triangle test'>' not supported between instances of 'list' and 'int'
 06/02/2023 02:38:31 
}
{
Is triangle test'>' not supported between instances of 'list' and 'int'
 06/02/2023 02:38:51 
}
{
Is triangle test'>' not supported between instances of 'list' and 'int'
 06/02/2023 02:39:01 
}
{
Is triangle testPASS
 06/02/2023 02:40:30 
}
{
Is triangle testassert False == True
 +  where False = <bound method Detect.is_triangle of <shapes.detect.Detect object at 0x00000203FAD4D1B0>>()
 +    where <bound method Detect.is_triangle of <shapes.detect.Detect object at 0x00000203FAD4D1B0>> = <shapes.detect.Detect object at 0x00000203FAD4D1B0>.is_triangle
 06/02/2023 02:40:46 
}
{
Is triangle testassert False == True
 +  where False = <bound method Detect.is_triangle of <shapes.detect.Detect object at 0x000002101367D120>>()
 +    where <bound method Detect.is_triangle of <shapes.detect.Detect object at 0x000002101367D120>> = <shapes.detect.Detect object at 0x000002101367D120>.is_triangle
 06/02/2023 02:41:07 
}
{
Is rectangle testPASS
 06/02/2023 02:42:12 
}
{
Is rectangle testassert False == True
 +  where False = <bound method Detect.is_rectangle of <shapes.detect.Detect object at 0x00000255ACBD9210>>()
 +    where <bound method Detect.is_rectangle of <shapes.detect.Detect object at 0x00000255ACBD9210>> = <shapes.detect.Detect object at 0x00000255ACBD9210>.is_rectangle
 06/02/2023 02:43:10 
}
{
Is rectangle testassert False == True
 +  where False = <bound method Detect.is_rectangle of <shapes.detect.Detect object at 0x0000023052FB2350>>()
 +    where <bound method Detect.is_rectangle of <shapes.detect.Detect object at 0x0000023052FB2350>> = <shapes.detect.Detect object at 0x0000023052FB2350>.is_rectangle
 06/02/2023 02:47:12 
}
{
Is square testassert False == True
 +  where False = <bound method Detect.is_square of <shapes.detect.Detect object at 0x0000023052FB23E0>>()
 +    where <bound method Detect.is_square of <shapes.detect.Detect object at 0x0000023052FB23E0>> = <shapes.detect.Detect object at 0x0000023052FB23E0>.is_square
 06/02/2023 02:47:12 
}
{
Is triangle testassert False == True
 +  where False = <bound method Detect.is_triangle of <shapes.detect.Detect object at 0x0000023052FB2260>>()
 +    where <bound method Detect.is_triangle of <shapes.detect.Detect object at 0x0000023052FB2260>> = <shapes.detect.Detect object at 0x0000023052FB2260>.is_triangle
 06/02/2023 02:47:12 
}
{
Square area testassert '' == '24'
  - 24
 06/02/2023 03:02:53 
}
{
Square area testassert '' == '24'
  - 24
 06/02/2023 03:03:23 
}
{
Square area testassert '' == '24'
  - 24
 06/02/2023 03:03:39 
}
{
Square area testassert 36 == '24'
 +  where 36 = <bound method Calc.square_area of <shapes.calc.Calc object at 0x000002B8AFCCDBA0>>()
 +    where <bound method Calc.square_area of <shapes.calc.Calc object at 0x000002B8AFCCDBA0>> = <shapes.calc.Calc object at 0x000002B8AFCCDBA0>.square_area
 +  and   '24' = <function getenv at 0x000002B8ACF00670>('REZ_AREA')
 +    where <function getenv at 0x000002B8ACF00670> = os.getenv
 06/02/2023 03:03:49 
}
{
Square area testassert 36 == '36'
 +  where 36 = <bound method Calc.square_area of <shapes.calc.Calc object at 0x000001CEDCA4DBA0>>()
 +    where <bound method Calc.square_area of <shapes.calc.Calc object at 0x000001CEDCA4DBA0>> = <shapes.calc.Calc object at 0x000001CEDCA4DBA0>.square_area
 +  and   '36' = <function getenv at 0x000001CED9C60670>('REZ_AREA')
 +    where <function getenv at 0x000001CED9C60670> = os.getenv
 06/02/2023 03:04:19 
}
{
Square area testPASS
 06/02/2023 03:05:06 
}
{
Square area testPASS
 06/02/2023 03:12:35 
}
{
Square area testPASS
 06/02/2023 03:12:35 
}
{
Square area testPASS
 06/02/2023 03:12:35 
}
{
Square area testPASS
 06/02/2023 03:15:11 
}
{
Square area testPASS
 06/02/2023 03:15:11 
}
{
Square area testPASS
 06/02/2023 03:15:11 
}
{
Square area testPASS
 06/02/2023 03:16:52 
}
{
Square area testPASS
 06/02/2023 03:16:52 
}
{
Square area testPASS
 06/02/2023 03:16:52 
}
{
Square area testPASS
 06/02/2023 03:17:17 
}
{
Square rectangle testPASS
 06/02/2023 03:19:14 
}
{
Square area testPASS
 06/02/2023 03:19:14 
}
{
Square triangle testthe JSON object must be str, bytes or bytearray, not NoneType
 06/02/2023 03:19:14 
}
{
Square area testPASS
 06/02/2023 03:19:14 
}
{
Square perimeter testPASS
 06/02/2023 03:19:14 
}
{
Square area testPASS
 06/02/2023 03:19:14 
}
{
Rectangle perimeter testPASS
 06/02/2023 03:20:23 
}
{
Rectangle area testPASS
 06/02/2023 03:20:23 
}
{
Triangle perimeter testthe JSON object must be str, bytes or bytearray, not NoneType
 06/02/2023 03:20:23 
}
{
Triangle area testPASS
 06/02/2023 03:20:23 
}
{
Square perimeter testPASS
 06/02/2023 03:20:23 
}
{
Square area testPASS
 06/02/2023 03:20:23 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 03:24:14 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 03:24:14 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 03:26:32 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 03:26:32 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 03:26:46 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 03:26:46 
}
{
Check_shape'NoneType' object is not iterable
 06/02/2023 03:26:46 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 03:28:03 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 03:28:03 
}
{
{'Square': [{'sides': [2, 2, 2, 2], 'area': 4, 'perimeter': 8}], 'Rectangle': [{'sides': [2, 2, 3, 3], 'area': 6, 'perimeter': 10}], 'Triangle': [{'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [5, 6, 6], 'area': 13.635890143294644, 'perimeter': 17}]}
 06/02/2023 03:28:03 
}
{
[[2, 3, 8], [2, 3, 8]]
 06/02/2023 03:28:03 
}
{
Check_shapePASS
 06/02/2023 03:28:03 
}
{
Is rectangle testPASS
 06/02/2023 09:30:24 
}
{
Is rectangle testPASS
 06/02/2023 09:30:54 
}
{
Is rectangle testPASS
 06/02/2023 09:31:37 
}
{
Is rectangle testassert False == True
 +  where False = <bound method Detect.is_rectangle of <shapes.detect.Detect object at 0x00000163F718D3C0>>()
 +    where <bound method Detect.is_rectangle of <shapes.detect.Detect object at 0x00000163F718D3C0>> = <shapes.detect.Detect object at 0x00000163F718D3C0>.is_rectangle
 06/02/2023 09:34:06 
}
{
Is rectangle testPASS
 06/02/2023 09:34:24 
}
{
Is rectangle testPASS
 06/02/2023 09:44:00 
}
{
Rectangle perimeter testassert 16 == 24
 +  where 16 = <bound method Calc.rectangle_perimeter of <shapes.calc.Calc object at 0x000002832B00DC00>>()
 +    where <bound method Calc.rectangle_perimeter of <shapes.calc.Calc object at 0x000002832B00DC00>> = <shapes.calc.Calc object at 0x000002832B00DC00>.rectangle_perimeter
 +  and   24 = <function loads at 0x0000028329254B80>('24')
 +    where <function loads at 0x0000028329254B80> = json.loads
 +    and   '24' = <function getenv at 0x00000283281F0670>('RES_PER')
 +      where <function getenv at 0x00000283281F0670> = os.getenv
 06/02/2023 09:46:48 
}
{
Rectangle area testPASS
 06/02/2023 09:47:47 
}
{
Rectangle area testPASS
 06/02/2023 10:14:25 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 10:14:39 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 10:14:39 
}
{
Check_shapeunsupported operand type(s) for -: 'list' and 'int'
 06/02/2023 10:14:39 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 10:15:34 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 10:15:34 
}
{
Check_shapelist indices must be integers or slices, not list
 06/02/2023 10:15:34 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 10:16:56 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 10:16:56 
}
{
[2, 2, 2, 2]
 06/02/2023 10:16:56 
}
{
[2, 2, 3, 3]
 06/02/2023 10:16:56 
}
{
[2, 3, 8]
 06/02/2023 10:16:56 
}
{
[2, 3, 8]
 06/02/2023 10:16:56 
}
{
[3, 4, 5]
 06/02/2023 10:16:56 
}
{
[3, 4, 5]
 06/02/2023 10:16:56 
}
{
[5, 6, 6]
 06/02/2023 10:16:56 
}
{
{'Square': [{'sides': [2, 2, 2, 2], 'area': 4, 'perimeter': 8}], 'Rectangle': [{'sides': [2, 2, 3, 3], 'area': 6, 'perimeter': 10}], 'Triangle': [{'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [5, 6, 6], 'area': 13.635890143294644, 'perimeter': 17}]}
 06/02/2023 10:16:56 
}
{
[[2, 3, 8], [2, 3, 8]]
 06/02/2023 10:16:56 
}
{
Check_shapePASS
 06/02/2023 10:16:56 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 10:18:31 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 10:18:31 
}
{
[2, 2, 3, 3]
 06/02/2023 10:18:31 
}
{
[2, 3, 8]
 06/02/2023 10:18:31 
}
{
[2, 3, 8]
 06/02/2023 10:18:31 
}
{
[3, 4, 5]
 06/02/2023 10:18:31 
}
{
[3, 4, 5]
 06/02/2023 10:18:31 
}
{
[5, 6, 6]
 06/02/2023 10:18:31 
}
{
{'Square': [], 'Rectangle': [{'sides': [2, 2, 3, 3], 'area': 6, 'perimeter': 10}], 'Triangle': [{'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [5, 6, 6], 'area': 13.635890143294644, 'perimeter': 17}]}
 06/02/2023 10:18:31 
}
{
[[2, 3, 8], [2, 3, 8]]
 06/02/2023 10:18:31 
}
{
Check_shapePASS
 06/02/2023 10:18:31 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 10:21:07 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 10:21:07 
}
{
Check_shapename 'list_without_return' is not defined
 06/02/2023 10:21:07 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 10:22:18 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 10:22:18 
}
{
[[2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 10:22:18 
}
{
{'Square': [], 'Rectangle': [{'sides': [2, 2, 3, 3], 'area': 6, 'perimeter': 10}], 'Triangle': [{'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [5, 6, 6], 'area': 13.635890143294644, 'perimeter': 17}]}
 06/02/2023 10:22:18 
}
{
[[2, 3, 8], [2, 3, 8]]
 06/02/2023 10:22:18 
}
{
Check_shapePASS
 06/02/2023 10:22:18 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 10:23:48 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 10:23:48 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 10:23:48 
}
{
{'Square': [{'sides': [2, 2, 2, 2], 'area': 4, 'perimeter': 8}], 'Rectangle': [{'sides': [2, 2, 3, 3], 'area': 6, 'perimeter': 10}], 'Triangle': [{'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [5, 6, 6], 'area': 13.635890143294644, 'perimeter': 17}]}
 06/02/2023 10:23:48 
}
{
[[2, 3, 8], [2, 3, 8]]
 06/02/2023 10:23:48 
}
{
Check_shapePASS
 06/02/2023 10:23:48 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 10:25:52 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 10:25:52 
}
{
[]
 06/02/2023 10:25:52 
}
{
{'Square': [], 'Rectangle': [], 'Triangle': []}
 06/02/2023 10:25:52 
}
{
[]
 06/02/2023 10:25:52 
}
{
Check_shapePASS
 06/02/2023 10:25:52 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 10:37:28 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 10:37:28 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 10:43:31 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 10:43:31 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 10:43:31 
}
{
{'Square': [{'sides': [2, 2, 2, 2], 'area': 4, 'perimeter': 8}], 'Rectangle': [{'sides': [2, 2, 3, 3], 'area': 6, 'perimeter': 10}], 'Triangle': [{'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [5, 6, 6], 'area': 13.635890143294644, 'perimeter': 17}]}
 06/02/2023 10:43:31 
}
{
[[2, 3, 8], [2, 3, 8]]
 06/02/2023 10:43:31 
}
{
Check_shapePASS
 06/02/2023 10:43:31 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 10:43:42 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 10:43:42 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 10:49:26 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 10:49:26 
}
{
[]
 06/02/2023 10:49:26 
}
{
{'Square': [], 'Rectangle': [], 'Triangle': []}
 06/02/2023 10:49:26 
}
{
[]
 06/02/2023 10:49:26 
}
{
Check_shapePASS
 06/02/2023 10:49:26 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 10:53:40 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 10:53:40 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 10:53:40 
}
{
[2, 2, 2, 2]
 06/02/2023 10:53:40 
}
{
[2, 2, 3, 3]
 06/02/2023 10:53:40 
}
{
[2, 3, 8]
 06/02/2023 10:53:40 
}
{
[2, 3, 8]
 06/02/2023 10:53:40 
}
{
[3, 4, 5]
 06/02/2023 10:53:40 
}
{
[3, 4, 5]
 06/02/2023 10:53:40 
}
{
[5, 6, 6]
 06/02/2023 10:53:40 
}
{
{'Square': [{'sides': [2, 2, 2, 2], 'area': 4, 'perimeter': 8}], 'Rectangle': [{'sides': [2, 2, 3, 3], 'area': 6, 'perimeter': 10}], 'Triangle': [{'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [5, 6, 6], 'area': 13.635890143294644, 'perimeter': 17}]}
 06/02/2023 10:53:40 
}
{
[[2, 3, 8], [2, 3, 8]]
 06/02/2023 10:53:40 
}
{
Check_shapePASS
 06/02/2023 10:53:40 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 10:59:20 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 10:59:20 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 10:59:20 
}
{
[5, 6, 6]
 06/02/2023 10:59:20 
}
{
[2, 2, 2, 2]
 06/02/2023 10:59:20 
}
{
[2, 2, 3, 3]
 06/02/2023 10:59:20 
}
{
[2, 2, 3, 3]
 06/02/2023 10:59:20 
}
{
[2, 3, 8]
 06/02/2023 10:59:20 
}
{
[2, 3, 8]
 06/02/2023 10:59:20 
}
{
[3, 4, 5]
 06/02/2023 10:59:20 
}
{
{'Square': [{'sides': [2, 2, 2, 2], 'area': 4, 'perimeter': 8}], 'Rectangle': [{'sides': [2, 2, 3, 3], 'area': 6, 'perimeter': 10}], 'Triangle': [{'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [5, 6, 6], 'area': 13.635890143294644, 'perimeter': 17}]}
 06/02/2023 10:59:20 
}
{
[[2, 3, 8], [2, 3, 8]]
 06/02/2023 10:59:20 
}
{
Check_shapePASS
 06/02/2023 10:59:20 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 11:00:28 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 11:00:28 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 11:00:28 
}
{
[2, 2, 2, 2]
 06/02/2023 11:00:28 
}
{
[5, 6, 6]
 06/02/2023 11:00:28 
}
{
[2, 2, 3, 3]
 06/02/2023 11:00:28 
}
{
[2, 2, 2, 2]
 06/02/2023 11:00:28 
}
{
[2, 3, 8]
 06/02/2023 11:00:28 
}
{
[2, 2, 3, 3]
 06/02/2023 11:00:28 
}
{
[2, 3, 8]
 06/02/2023 11:00:28 
}
{
[2, 2, 3, 3]
 06/02/2023 11:00:28 
}
{
[3, 4, 5]
 06/02/2023 11:00:28 
}
{
[2, 3, 8]
 06/02/2023 11:00:28 
}
{
[3, 4, 5]
 06/02/2023 11:00:28 
}
{
[2, 3, 8]
 06/02/2023 11:00:28 
}
{
[5, 6, 6]
 06/02/2023 11:00:28 
}
{
[3, 4, 5]
 06/02/2023 11:00:28 
}
{
{'Square': [{'sides': [2, 2, 2, 2], 'area': 4, 'perimeter': 8}], 'Rectangle': [{'sides': [2, 2, 3, 3], 'area': 6, 'perimeter': 10}], 'Triangle': [{'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [5, 6, 6], 'area': 13.635890143294644, 'perimeter': 17}]}
 06/02/2023 11:00:28 
}
{
[[2, 3, 8], [2, 3, 8]]
 06/02/2023 11:00:28 
}
{
Check_shapePASS
 06/02/2023 11:00:28 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 11:05:39 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 11:05:39 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 11:05:39 
}
{
Check_shapecan only concatenate list (not "str") to list
 06/02/2023 11:05:39 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 11:06:31 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 11:06:31 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 11:06:31 
}
{
[2, 2, 2, 2, 1]
 06/02/2023 11:06:31 
}
{
[5, 6, 6, 0]
 06/02/2023 11:06:31 
}
{
[2, 2, 3, 3, 1]
 06/02/2023 11:06:31 
}
{
[2, 2, 2, 2, 0]
 06/02/2023 11:06:31 
}
{
[2, 3, 8, 1]
 06/02/2023 11:06:31 
}
{
[2, 2, 3, 3, 0]
 06/02/2023 11:06:31 
}
{
[2, 3, 8, 1]
 06/02/2023 11:06:31 
}
{
[2, 2, 3, 3, 0]
 06/02/2023 11:06:31 
}
{
[3, 4, 5, 1]
 06/02/2023 11:06:31 
}
{
[2, 3, 8, 0]
 06/02/2023 11:06:31 
}
{
[3, 4, 5, 1]
 06/02/2023 11:06:31 
}
{
[2, 3, 8, 0]
 06/02/2023 11:06:31 
}
{
[5, 6, 6, 1]
 06/02/2023 11:06:31 
}
{
[3, 4, 5, 0]
 06/02/2023 11:06:31 
}
{
{'Square': [{'sides': [2, 2, 2, 2], 'area': 4, 'perimeter': 8}], 'Rectangle': [{'sides': [2, 2, 3, 3], 'area': 6, 'perimeter': 10}], 'Triangle': [{'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [5, 6, 6], 'area': 13.635890143294644, 'perimeter': 17}]}
 06/02/2023 11:06:31 
}
{
[[2, 3, 8], [2, 3, 8]]
 06/02/2023 11:06:31 
}
{
Check_shapePASS
 06/02/2023 11:06:31 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 11:14:21 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 11:14:21 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 11:14:21 
}
{
[2, 2, 2, 2]
 06/02/2023 11:14:21 
}
{
[2, 2, 3, 3]
 06/02/2023 11:14:21 
}
{
[2, 2, 3, 3]
 06/02/2023 11:14:21 
}
{
[2, 3, 8]
 06/02/2023 11:14:21 
}
{
[2, 3, 8]
 06/02/2023 11:14:21 
}
{
[2, 3, 8]
 06/02/2023 11:14:21 
}
{
[2, 3, 8]
 06/02/2023 11:14:21 
}
{
[2, 3, 8]
 06/02/2023 11:14:21 
}
{
[3, 4, 5]
 06/02/2023 11:14:21 
}
{
[3, 4, 5]
 06/02/2023 11:14:21 
}
{
[3, 4, 5]
 06/02/2023 11:14:21 
}
{
[3, 4, 5]
 06/02/2023 11:14:21 
}
{
[5, 6, 6]
 06/02/2023 11:14:21 
}
{
Check_shapelist index out of range
 06/02/2023 11:14:21 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 11:21:04 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 11:21:04 
}
{
[2, 2, 2, 2]
 06/02/2023 11:21:04 
}
{
[2, 2, 3, 3]
 06/02/2023 11:21:04 
}
{
[2, 2, 3, 3]
 06/02/2023 11:21:04 
}
{
[2, 3, 8]
 06/02/2023 11:21:04 
}
{
[2, 3, 8]
 06/02/2023 11:21:04 
}
{
[2, 3, 8]
 06/02/2023 11:21:04 
}
{
[2, 3, 8]
 06/02/2023 11:21:04 
}
{
[2, 3, 8]
 06/02/2023 11:21:04 
}
{
[3, 4, 5]
 06/02/2023 11:21:04 
}
{
[3, 4, 5]
 06/02/2023 11:21:04 
}
{
[3, 4, 5]
 06/02/2023 11:21:04 
}
{
[3, 4, 5]
 06/02/2023 11:21:04 
}
{
[5, 6, 6]
 06/02/2023 11:21:04 
}
{
Check_shapelist index out of range
 06/02/2023 11:21:04 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 11:21:32 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 11:21:32 
}
{
{'Square': [{'sides': [2, 2, 2, 2], 'area': 4, 'perimeter': 8}], 'Rectangle': [{'sides': [2, 2, 3, 3], 'area': 6, 'perimeter': 10}], 'Triangle': [{'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [5, 6, 6], 'area': 13.635890143294644, 'perimeter': 17}]}
 06/02/2023 11:21:32 
}
{
[[2, 3, 8], [2, 3, 8]]
 06/02/2023 11:21:32 
}
{
Check_shapePASS
 06/02/2023 11:21:32 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 11:29:54 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 11:29:54 
}
{
1
 06/02/2023 11:29:54 
}
{
1
 06/02/2023 11:29:54 
}
{
2
 06/02/2023 11:29:54 
}
{
2
 06/02/2023 11:29:54 
}
{
2
 06/02/2023 11:29:54 
}
{
2
 06/02/2023 11:29:54 
}
{
1
 06/02/2023 11:29:54 
}
{
{'Square': [{'sides': [2, 2, 2, 2], 'area': 4, 'perimeter': 8}], 'Rectangle': [{'sides': [2, 2, 3, 3], 'area': 6, 'perimeter': 10}], 'Triangle': [{'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [5, 6, 6], 'area': 13.635890143294644, 'perimeter': 17}]}
 06/02/2023 11:29:54 
}
{
[[2, 3, 8], [2, 3, 8]]
 06/02/2023 11:29:54 
}
{
Check_shapePASS
 06/02/2023 11:29:54 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 11:42:45 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 11:42:45 
}
{
1
 06/02/2023 11:42:45 
}
{
1
 06/02/2023 11:42:45 
}
{
2
 06/02/2023 11:42:45 
}
{
2
 06/02/2023 11:42:45 
}
{
2
 06/02/2023 11:42:45 
}
{
2
 06/02/2023 11:42:45 
}
{
1
 06/02/2023 11:42:45 
}
{
{'Square': [{'sides': [2, 2, 2, 2], 'area': 4, 'perimeter': 8}], 'Rectangle': [{'sides': [2, 2, 3, 3], 'area': 6, 'perimeter': 10}], 'Triangle': [{'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [5, 6, 6], 'area': 13.635890143294644, 'perimeter': 17}]}
 06/02/2023 11:42:45 
}
{
[[2, 3, 8], [2, 3, 8]]
 06/02/2023 11:42:45 
}
{
Check_shapePASS
 06/02/2023 11:42:45 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 11:48:48 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 11:48:48 
}
{
1
 06/02/2023 11:48:48 
}
{
1
 06/02/2023 11:48:48 
}
{
2
 06/02/2023 11:48:48 
}
{
2
 06/02/2023 11:48:48 
}
{
2
 06/02/2023 11:48:48 
}
{
2
 06/02/2023 11:48:48 
}
{
1
 06/02/2023 11:48:48 
}
{
{'Square': [{'sides': [2, 2, 2, 2], 'area': 4, 'perimeter': 8}], 'Rectangle': [{'sides': [2, 2, 3, 3], 'area': 6, 'perimeter': 10}], 'Triangle': [{'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [5, 6, 6], 'area': 13.635890143294644, 'perimeter': 17}]}
 06/02/2023 11:48:48 
}
{
[[2, 3, 8], [2, 3, 8]]
 06/02/2023 11:48:48 
}
{
Check_shapePASS
 06/02/2023 11:48:48 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 2, 3, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 12:05:11 
}
{
[[2, 2, 2, 2], [2, 2, 3, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 12:05:11 
}
{
0
 06/02/2023 12:05:11 
}
{
0
 06/02/2023 12:05:11 
}
{
0
 06/02/2023 12:05:11 
}
{
{'Square': [{'sides': [2, 2, 2, 2], 'area': 4, 'perimeter': 8}], 'Rectangle': [{'sides': [2, 2, 3, 3], 'area': 6, 'perimeter': 10}], 'Triangle': [{'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [5, 6, 6], 'area': 13.635890143294644, 'perimeter': 17}]}
 06/02/2023 12:05:11 
}
{
[[2, 3, 8], [2, 3, 8]]
 06/02/2023 12:05:11 
}
{
Check_shapePASS
 06/02/2023 12:05:11 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 3, 2, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 12:09:24 
}
{
[[2, 2, 2, 2], [2, 3, 2, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 12:09:24 
}
{
{'Square': [{'sides': [2, 2, 2, 2], 'area': 4, 'perimeter': 8}], 'Rectangle': [{'sides': [2, 3, 2, 3], 'area': 4, 'perimeter': 10}], 'Triangle': [{'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [5, 6, 6], 'area': 13.635890143294644, 'perimeter': 17}]}
 06/02/2023 12:09:24 
}
{
[[2, 3, 8], [2, 3, 8]]
 06/02/2023 12:09:24 
}
{
Check_shapePASS
 06/02/2023 12:09:24 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 3, 2, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 12:10:22 
}
{
[[2, 2, 2, 2], [2, 3, 2, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 12:10:22 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 3, 2, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 12:11:06 
}
{
[[2, 2, 2, 2], [2, 3, 2, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 12:11:06 
}
{
{'Square': [{'sides': [2, 2, 2, 2], 'area': 4, 'perimeter': 8}], 'Rectangle': [{'sides': [2, 3, 2, 3], 'area': 4, 'perimeter': 10}], 'Triangle': [{'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [5, 6, 6], 'area': 13.635890143294644, 'perimeter': 17}]}
 06/02/2023 12:11:06 
}
{
[[2, 3, 8], [2, 3, 8]]
 06/02/2023 12:11:06 
}
{
Check_shapePASS
 06/02/2023 12:11:06 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 3, 2, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 12:13:10 
}
{
[[2, 2, 2, 2], [2, 3, 2, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 12:13:10 
}
{
{'Square': [{'sides': [2, 2, 2, 2], 'area': 4, 'perimeter': 8}], 'Rectangle': [{'sides': [2, 3, 2, 3], 'area': 4, 'perimeter': 10}], 'Triangle': [{'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [5, 6, 6], 'area': 13.635890143294644, 'perimeter': 17}]}
 06/02/2023 12:13:10 
}
{
[[2, 3, 8], [2, 3, 8]]
 06/02/2023 12:13:10 
}
{
Check_shapePASS
 06/02/2023 12:13:10 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 3, 2, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 12:13:14 
}
{
[[2, 2, 2, 2], [2, 3, 2, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 12:13:14 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 3, 2, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 12:18:51 
}
{
[[2, 2, 2, 2], [2, 3, 2, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 12:18:51 
}
{
{'Square': [{'sides': [2, 2, 2, 2], 'area': 4, 'perimeter': 8}], 'Rectangle': [{'sides': [2, 3, 2, 3], 'area': 4, 'perimeter': 10}], 'Triangle': [{'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [5, 6, 6], 'area': 13.635890143294644, 'perimeter': 17}]}
 06/02/2023 12:18:51 
}
{
[[2, 3, 8], [2, 3, 8]]
 06/02/2023 12:18:51 
}
{
Check_shapePASS
 06/02/2023 12:18:51 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 3, 2, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 12:21:04 
}
{
[[2, 2, 2, 2], [2, 3, 2, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 12:21:04 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 3, 2, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 12:23:04 
}
{
[[2, 2, 2, 2], [2, 3, 2, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 12:23:04 
}
{
{'Square': [{'sides': [2, 2, 2, 2], 'area': 4, 'perimeter': 8}], 'Rectangle': [{'sides': [2, 3, 2, 3], 'area': 4, 'perimeter': 10}], 'Triangle': [{'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [5, 6, 6], 'area': 13.635890143294644, 'perimeter': 17}]}
 06/02/2023 12:23:04 
}
{
[[2, 3, 8], [2, 3, 8]]
 06/02/2023 12:23:04 
}
{
Check_shapePASS
 06/02/2023 12:23:04 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 3, 2, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 12:24:10 
}
{
[[2, 2, 2, 2], [2, 3, 2, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 12:24:10 
}
{
{'Square': [{'sides': [2, 2, 2, 2], 'area': 4, 'perimeter': 8}], 'Rectangle': [{'sides': [2, 3, 2, 3], 'area': 4, 'perimeter': 10}], 'Triangle': [{'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [5, 6, 6], 'area': 13.635890143294644, 'perimeter': 17}]}
 06/02/2023 12:24:10 
}
{
[[2, 3, 8], [2, 3, 8]]
 06/02/2023 12:24:10 
}
{
Check_shapePASS
 06/02/2023 12:24:10 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 3, 2, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 12:26:26 
}
{
[[2, 2, 2, 2], [2, 3, 2, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 12:26:26 
}
{
{'Square': [{'sides': [2, 2, 2, 2], 'area': 4, 'perimeter': 8}], 'Rectangle': [{'sides': [2, 3, 2, 3], 'area': 4, 'perimeter': 10}], 'Triangle': [{'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [5, 6, 6], 'area': 13.635890143294644, 'perimeter': 17}]}
 06/02/2023 12:26:26 
}
{
[[2, 3, 8]]
 06/02/2023 12:26:26 
}
{
Check_shapePASS
 06/02/2023 12:26:26 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 3, 2, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 13:04:23 
}
{
[[2, 2, 2, 2], [2, 3, 2, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 13:04:23 
}
{
{'Square': [{'sides': [2, 2, 2, 2], 'area': 4, 'perimeter': 8}], 'Rectangle': [{'sides': [2, 3, 2, 3], 'area': 4, 'perimeter': 10}], 'Triangle': [{'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [5, 6, 6], 'area': 13.635890143294644, 'perimeter': 17}]}
 06/02/2023 13:04:23 
}
{
[[2, 3, 8]]
 06/02/2023 13:04:23 
}
{
Check_shapePASS
 06/02/2023 13:04:23 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 3, 2, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 13:35:45 
}
{
[[2, 2, 2, 2], [2, 3, 2, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 13:35:45 
}
{
{'Square': [{'sides': [2, 2, 2, 2], 'area': 4, 'perimeter': 8}], 'Rectangle': [{'sides': [2, 3, 2, 3], 'area': 4, 'perimeter': 10}], 'Triangle': [{'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [5, 6, 6], 'area': 13.635890143294644, 'perimeter': 17}]}
 06/02/2023 13:35:45 
}
{
[[2, 3, 8]]
 06/02/2023 13:35:45 
}
{
Check_shapePASS
 06/02/2023 13:35:45 
}
{
[[2, 2, 2, 2], [3, 4, 5], [5, 6, 6], [2, 3, 2, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 14:16:33 
}
{
[[2, 2, 2, 2], [2, 3, 2, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 14:16:33 
}
{
{'Square': [{'sides': [2, 2, 2, 2], 'area': 4, 'perimeter': 8}], 'Rectangle': [{'sides': [2, 3, 2, 3], 'area': 4, 'perimeter': 10}], 'Triangle': [{'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [5, 6, 6], 'area': 13.635890143294644, 'perimeter': 17}]}
 06/02/2023 14:16:33 
}
{
[[2, 3, 8]]
 06/02/2023 14:16:33 
}
{
Check_shapePASS
 06/02/2023 14:16:33 
}
{
[[2, 2, 2, 2, 1], [3, 4, 5], [5, 6, 6], [2, 3, 2, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 14:17:53 
}
{
[[2, 2, 2, 2, 1], [2, 3, 2, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 14:17:53 
}
{
{'Square': [], 'Rectangle': [{'sides': [2, 3, 2, 3], 'area': 4, 'perimeter': 10}], 'Triangle': [{'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [5, 6, 6], 'area': 13.635890143294644, 'perimeter': 17}]}
 06/02/2023 14:17:53 
}
{
[[2, 2, 2, 2, 1], [2, 3, 8]]
 06/02/2023 14:17:53 
}
{
Check_shapePASS
 06/02/2023 14:17:53 
}
{
Rectangle area testPASS
 06/02/2023 14:19:22 
}
{
Rectangle area testassert '' == 36
 +  where '' = <bound method Calc.rectangle_area of <shapes.calc.Calc object at 0x000001F2BEADDC30>>()
 +    where <bound method Calc.rectangle_area of <shapes.calc.Calc object at 0x000001F2BEADDC30>> = <shapes.calc.Calc object at 0x000001F2BEADDC30>.rectangle_area
 +  and   36 = <function loads at 0x000001F2BCD24B80>('36')
 +    where <function loads at 0x000001F2BCD24B80> = json.loads
 +    and   '36' = <function getenv at 0x000001F2BBD00670>('RES_AREA')
 +      where <function getenv at 0x000001F2BBD00670> = os.getenv
 06/02/2023 14:19:52 
}
{
[[2, 2, 2, 2, 1], [3, 4, 5], [5, 6, 6], [2, 3, 2, 3], [2, 3, 8], [3, 4, 5], [2, 3, 8]]
 06/02/2023 14:24:42 
}
{
[[2, 2, 2, 2, 1], [2, 3, 2, 3], [2, 3, 8], [2, 3, 8], [3, 4, 5], [3, 4, 5], [5, 6, 6]]
 06/02/2023 14:24:42 
}
{
{'Square': [], 'Rectangle': [{'sides': [2, 3, 2, 3], 'area': 4, 'perimeter': 10}], 'Triangle': [{'sides': [3, 4, 5], 'area': 6.0, 'perimeter': 12}, {'sides': [5, 6, 6], 'area': 13.635890143294644, 'perimeter': 17}]}
 06/02/2023 14:24:42 
}
{
[[2, 2, 2, 2, 1], [2, 3, 8]]
 06/02/2023 14:24:42 
}
{
Check_shapePASS
 06/02/2023 14:24:42 
}